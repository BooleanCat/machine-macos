---
- hosts: 'all'
  vars:
    bin: '{{ ansible_env.PWD }}/bin'
    install: '{{ ansible_env.PWD }}/install'
    config: '{{ ansible_env.PWD }}/config'
  tasks:
  - name: 'bin'
    lineinfile:
      path: '{{ item.path }}'
      line: '{{ item.line }}'
      create: true
    with_items:
    - path: '~/.zshrc'
      line: 'export PATH="${PATH}:{{ bin }}"'
    - path: '~/.config/fish/config.fish'
      line: 'set PATH {{ bin }} $PATH'

  - name: 'brew: upgrade'
    homebrew:
      update_homebrew: true
      upgrade_all: true

  - name: 'fish'
    homebrew: {name: 'fish'}
  - name: 'fish: default shell'
    shell: '{{ install }}/fish-default-shell.bash {{ ansible_user_id }}'
    become: true
    register: 'fish_default_shell'
    changed_when: '"already default" not in fish_default_shell["stdout"]'
  - name: 'fish: oh-my-fish'
    shell: '{{ install }}/omf.bash'
    register: 'fish_omf'
    changed_when: '"already installed" not in fish_omf["stdout"]'
  - name: 'fish: oh-my-fish update'
    shell: 'omf update'
    args: {executable: 'fish'}
    register: 'omf_update'
    changed_when: '"already up-to-date" not in omf_update["stdout"]'
  - name: 'fish: oh-my-fish install'
    shell: 'omf install bass'
    args: {executable: 'fish'}
    register: 'omf_install'
    changed_when: '"already installed" not in omf_install["stderr"]'

  - name: 'starship'
    homebrew: {name: 'starship'}

  - name: 'alacritty'
    homebrew_cask: {name: 'alacritty'}

  - name: 'go'
    homebrew: {name: ['go', 'golangci/tap/golangci-lint']}
  - name: 'go: env'
    lineinfile:
      path: '{{ item.path }}'
      line: '{{ item.line }}'
      create: true
    with_items:
    - path: '~/.zshrc'
      line: 'export GOPATH="${HOME}/go"'
    - path: '~/.config/fish/config.fish'
      line: 'set -Ux GOPATH $HOME/go'
    - path: '~/.zshrc'
      line: 'export PATH="${PATH}:${GOPATH}"'
    - path: '~/.config/fish/config.fish'
      line: 'set PATH $GOPATH/bin $PATH'

  - name: 'lua'
    homebrew: {name: ['lua', 'luarocks']}

  - name: 'rust'
    homebrew: {name: 'rust'}

  - name: 'shellcheck'
    homebrew: {name: 'shellcheck'}

  - name: 'jq'
    homebrew: {name: 'jq'}

  - name: 'atom'
    homebrew_cask: {name: 'atom'}

  - name: 'firefox'
    homebrew_cask: {name: 'firefox'}

  - name: 'slack'
    homebrew_cask: {name: 'slack'}

  - name: 'flycut'
    homebrew_cask: {name: 'flycut'}

  - name: 'shiftit'
    homebrew_cask: {name: 'shiftit'}

  - name: 'visual studio'
    homebrew_cask: {name: 'visual-studio-code'}

  - name: 'notion'
    homebrew_cask: {name: 'notion'}

  - name: 'ripgrep'
    homebrew: {name: 'ripgrep'}

  - name: 'fd'
    homebrew: {name: 'fd'}

  - name: 'npm'
    homebrew: {name: 'npm'}

  - name: 'neovim'
    homebrew: {name: 'neovim'}
  - name: 'neovim: config'
    git:
      repo: 'https://github.com/luan/nvim'
      dest: '~/.config/nvim'

  - name: 'git: config'
    ini_file:
      path: '~/.gitconfig'
      create: true
      section: 'include'
      option: 'path'
      value: '{{ config }}/.gitconfig'
